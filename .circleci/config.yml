# need to complete changes to make v2 compatible
# https://circleci.com/docs/2.0/sample-config/
# https://circleci.com/docs/2.0/migrating-from-1-2/

jobs:
  build:
    working_directory: ~/dmbee/seglearn
    parallelism: 1
    shell: /bin/bash --login

    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      USERNAME: dmbee
      DOC_REPO: seglearn
      DOC_URL: ''
      EMAIL: david.mo.burns@gmail.com

    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-

    - run: sudo -E apt-get -yq remove texlive-binaries --purge
    - run: sudo apt-get update
    - run: sudo apt-get install libatlas-dev libatlas3gf-base
    - run: sudo apt-get install build-essential python-dev python-setuptools
    - run: pip install --upgrade numpy
    - run: pip install --upgrade scipy matplotlib setuptools nose coverage sphinx pillow sphinx-gallery sphinx_rtd_theme pandas
    - run: pip install --upgrade tensorflow
    - run: pip install --upgrade keras
    - run: sudo -E apt-get -yq update
    - run: sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install dvipng texlive-latex-base texlive-latex-extra
    - run: pip install --upgrade cython numpydoc
    - run: pip install --upgrade scikit-learn
    - run: python setup.py clean
    - run: python setup.py develop
    - run: set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower

    - run: cat ~/log.txt && if grep -q "Traceback (most recent call last):" ~/log.txt; then false; else true; fi

    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: doc/_build/html
    - store_artifacts:
        path: ~/log.txt
    - store_artifacts:
        path: /tmp/circleci-test-results





















version: 2

jobs:
  build:
    environment:
      # The github organization or username of the repository which hosts the
      # project and documentation.
      USERNAME: "dmbee"

      # The repository where the documentation will be hosted
      DOC_REPO: "seglearn"

      # The base URL for the Github page where the documentation will be hosted
      DOC_URL: ""

      # The email is to be used for commits in the Github Page
      EMAIL: "david.mo.burns@gmail.com"

steps:
  - run:



dependencies:

  # Various dependencies
  pre:
    - sudo -E apt-get -yq remove texlive-binaries --purge
    - sudo apt-get update
    - sudo apt-get install libatlas-dev libatlas3gf-base
    - sudo apt-get install build-essential python-dev python-setuptools
    # install numpy first as it is a compile time dependency for other packages
    - pip install --upgrade numpy
    - pip install --upgrade scipy matplotlib setuptools nose coverage sphinx pillow sphinx-gallery sphinx_rtd_theme pandas
    - pip install --upgrade tensorflow
    - pip install --upgrade keras
    # Installing required packages for `make -C doc check command` to work.
    - sudo -E apt-get -yq update
    - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install dvipng texlive-latex-base texlive-latex-extra
    - pip install --upgrade cython numpydoc
    - pip install --upgrade scikit-learn

  # The --user is needed to let sphinx see the source and the binaries
  # The pipefail is requested to propagate exit code
  override:
    - python setup.py clean
    - python setup.py develop
    - set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
test:
  # Grep error on the documentation
  override:
    - cat ~/log.txt && if grep -q "Traceback (most recent call last):" ~/log.txt; then false; else true; fi
deployment:
  push:
    branch: master
    commands:
      - bash ci_scripts/circleci/push_doc.sh
general:
  # Open the doc to the API
  artifacts:
    - "doc/_build/html"
    - "~/log.txt"
  # Restric the build to the branch master only
  branches:
    ignore:
       - gh-pages